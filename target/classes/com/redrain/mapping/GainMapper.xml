<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redrain.dao.GainMapper">
  <resultMap id="BaseResultMap" type="com.redrain.model.Gain">
    <id column="gainid" jdbcType="INTEGER" property="gainid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="awardid" jdbcType="INTEGER" property="awardid" />
    <result column="gaintime" jdbcType="TIMESTAMP" property="gaintime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="awardname" jdbcType="VARCHAR" property="awardname" />
    <result column="awardtype" jdbcType="VARCHAR" property="awardtype" />
  </resultMap>
  <sql id="Base_Column_List">
    gainid, userid, awardid, gaintime, status
  </sql>
  <sql id="Base_Column_List1">
    gainid, username,awardid,gaintime, status
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gain
    where gainid = #{gainid,jdbcType=INTEGER}
  </select>
  
   <select id="selectList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />
    from gain inner join user on user.userid=gain.userid
    where gaintime like binary '%${search}%' or username like binary '%${search}%' or awardid like binary '%${search}%'
    order by gaintime desc
    limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
  </select>
  
  <select id="selectAllList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />
    from gain inner join user on user.userid=gain.userid
    where status='1'
    order by gaintime desc
    limit 20 offset 0
  </select>
  
  <select id="selectCount" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />
     from gain inner join user on user.userid=gain.userid
    where gaintime like binary '%${search}%' or username like binary '%${search}%' or awardid like binary '%${search}%'
    order by gaintime desc
  </select>
  
  
     <select id="selectListbyuser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />
    from gain inner join user on user.userid=gain.userid
    where gain.userid= #{userid,jdbcType=INTEGER} and (gaintime like binary '%${search}%' or username like binary '%${search}%' or awardid like binary '%${search}%')
    order by gaintime desc
    limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
  </select>
  
  <select id="selectListbyusername" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />
    from gain inner join user on user.userid=gain.userid
    where username=#{username,jdbcType=VARCHAR}
    order by gaintime desc
    limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
  </select>
  
  <select id="selectCountbyusername" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />
    from gain inner join user on user.userid=gain.userid
    where username=#{username,jdbcType=VARCHAR}
    order by gaintime desc
  </select>
  
  <select id="selectCountbyuser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />
     from gain inner join user on user.userid=gain.userid
    where gain.userid= #{userid,jdbcType=INTEGER} and (gaintime like binary '%${search}%' or username like binary '%${search}%' or awardid like binary '%${search}%')
    order by gaintime desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gain
    where gainid = #{gainid,jdbcType=INTEGER}
  </delete>
  
  <delete id="delete">
    delete from gain
  </delete>
  
  <insert id="insert" parameterType="com.redrain.model.Gain">
    insert into gain (gainid, userid, awardid, 
      gaintime, status)
    values (#{gainid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{awardid,jdbcType=INTEGER}, 
      #{gaintime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.redrain.model.Gain">
    insert into gain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gainid != null">
        gainid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="awardid != null">
        awardid,
      </if>
      <if test="gaintime != null">
        gaintime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gainid != null">
        #{gainid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="awardid != null">
        #{awardid,jdbcType=INTEGER},
      </if>
      <if test="gaintime != null">
        #{gaintime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.redrain.model.Gain">
    update gain
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="awardid != null">
        awardid = #{awardid,jdbcType=INTEGER},
      </if>
      <if test="gaintime != null">
        gaintime = #{gaintime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where gainid = #{gainid,jdbcType=INTEGER}
  </update>
  
  <update id="finish">
    update gain set status='1'
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.redrain.model.Gain">
    update gain
    set userid = #{userid,jdbcType=INTEGER},
      awardid = #{awardid,jdbcType=INTEGER},
      gaintime = #{gaintime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where gainid = #{gainid,jdbcType=INTEGER}
  </update>
</mapper>