<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redrain.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.redrain.model.User">
    <id column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="floatercount" jdbcType="INTEGER" property="floatercount" />
    <result column="fixedmoney" jdbcType="INTEGER" property="fixedmoney" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, username, password, floatercount, name, role,fixedmoney
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  
  <select id="selectList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where role is null and (username like binary '%${search}%' or name like binary '%${search}%' or fixedmoney like binary '%${search}%' or floatercount like binary '%${search}%' or userid like binary '%${search}%')
    limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}
  </select>
  <select id="selectCount" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where role is null and (username like binary '%${search}%' or name like binary '%${search}%' or fixedmoney like binary '%${search}%' or floatercount like binary '%${search}%' or userid like binary '%${search}%')
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteAllUser">
    delete from user
    where role is null
  </delete>
  
  <insert id="insert" parameterType="com.redrain.model.User">
    insert into user (userid, username, password, 
      floatercount, name, role,fixedmoney
      )
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{floatercount,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},#{fixedmoney,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.redrain.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="floatercount != null">
        floatercount,
      </if>
      <if test="fixedmoney != null">
        fixedmoney,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="floatercount != null">
        #{floatercount,jdbcType=INTEGER},
      </if>
      <if test="fixedmoeny != null">
        #{fixedmoeny,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.redrain.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="floatercount != null">
        floatercount = #{floatercount,jdbcType=INTEGER},
      </if>
      <if test="fixedmoney != null">
        fixedmoney = #{fixedmoney,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.redrain.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      floatercount = #{floatercount,jdbcType=INTEGER},
      fixedmoney = #{fixedmoney,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>